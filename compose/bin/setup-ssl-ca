#!/bin/bash

set -o errexit

[[ -z "${BIN_DIR}" ]] && BIN_DIR="$(dirname "$0")"
[[ -z "${PROJECT_ROOT}" ]] && PROJECT_ROOT="$(dirname "${BIN_DIR}")"

# Generate a new local CA "/root/.local/share/mkcert"
"${BIN_DIR}/docker-compose" exec -T -u root app mkcert -install

docker cp "$("${BIN_DIR}/docker-compose" ps -q app | awk '{print $1}')":/root/.local/share/mkcert/rootCA.pem "${PROJECT_ROOT}/rootCA.pem"
echo "System password requested to install certificate authority on host..."

if [[ "$(uname)" == "Darwin" ]]; then
  sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain "${PROJECT_ROOT}/rootCA.pem"

  ### Check if Firefox is installed
  FFoxBin="/Applications/Firefox.app/Contents/MacOS/firefox-bin"
  if [[ -f "${FFoxBin}" ]]; then
    echo "{\"policies\": {\"Certificates\": {\"ImportEnterpriseRoots\": true}}}" | sudo tee "${PROJECT_ROOT}/policies.json"

    ### Check if distribution directory exists
    DistDirectory="/Applications/Firefox.app/Contents/Resources/distribution"
    if [[ ! -d "${DistDirectory}" ]]; then
      sudo mkdir -p "${DistDirectory}"
    fi
    ### Move the newly created policies.json to the Certificates directory
    sudo mv "${PROJECT_ROOT}/policies.json" "${DistDirectory}"/policies.json

    ### Check if Certificates directory exists
    CertDirectory="/Library/Application Support/Mozilla/Certificates"
    if [[ ! -d "${CertDirectory}" ]]; then
      sudo mkdir -p "${CertDirectory}"
    fi

    ### Move the newly created .pem to the Certificates directory
    sudo mv "${PROJECT_ROOT}/rootCA.pem" "${CertDirectory}"/rootCA.pem
  else
    sudo rm "${PROJECT_ROOT}/rootCA.pem"
  fi
else
  ### Requirement: apt install libnss3-tools
  REQUIRED_PKG="libnss3-tools"
  PKG_OK=$(dpkg-query -W --showformat='${Status}\n' "${REQUIRED_PKG}" | grep "install ok installed")
  echo "Checking for ${REQUIRED_PKG}: ${PKG_OK}"
  if [[ "" = "${PKG_OK}" ]]; then
    echo "No ${REQUIRED_PKG} found. Setting up ${REQUIRED_PKG}."
    sudo apt-get --yes install "${REQUIRED_PKG}"
  fi

  ### CA file to install (CUSTOMIZE!)
  certfile="${PROJECT_ROOT}/rootCA.pem"
  certname="Root CA"

  ### For cert8 (legacy - DBM)
  find ~/ -name "cert8.db" -print0 | while read -r certDB; do
    certdir=$(dirname "${certDB}")
    certutil -D -n "${certname}" -i "${certfile}" -d dbm:"${certdir}"
    certutil -A -n "${certname}" -t "TCu,Cu,Tu" -i "${certfile}" -d dbm:"${certdir}"
  done

  ### For cert9 (SQL)
  find ~/ -name "cert9.db" -print0 | while read -r certDB; do
    certdir=$(dirname "${certDB}")
    certutil -D -n "${certname}" -i "${certfile}" -d sql:"${certdir}"
    certutil -A -n "${certname}" -t "TCu,Cu,Tu" -i "${certfile}" -d sql:"${certdir}"
  done

  sudo mv "${PROJECT_ROOT}/rootCA.pem" /usr/local/share/ca-certificates/rootCA.crt
  sudo update-ca-certificates
fi
