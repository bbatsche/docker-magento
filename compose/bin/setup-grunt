#!/bin/bash

[[ -z "${BIN_DIR}" ]] && BIN_DIR="$(dirname "$0")"
[[ -z "${PROJECT_ROOT}" ]] && PROJECT_ROOT="$(dirname "${BIN_DIR}")"

echo "Confirming n98-magerun2 is installed..."
"${BIN_DIR}/n98-magerun2" > /dev/null 2>&1

DEFAULT_THEME_ID="select value from core_config_data where path = 'design/theme/theme_id'"
THEME_PATH="select theme_path from theme where theme_id in (${DEFAULT_THEME_ID});"
VENDOR_THEME=$("${BIN_DIR}/n98-magerun2" db:query "${THEME_PATH}" | sed -n 2p | cut -d$'\r' -f1)
THEME=$(echo "${VENDOR_THEME}" | cut -d'/' -f2)
LOCALE_CODE=$("${BIN_DIR}/magento" config:show general/locale/code | cut -d$'\r' -f1 | sed 's/ *$//g')

# Generate local-theme.js for custom theme
read -r -d '' GEN_THEME_JS << EOM
var fs = require('fs');
var util = require('util');
var theme = require('./dev/tools/grunt/configs/themes');

theme['${THEME}'] = {
    area: 'frontend',
    name: '${VENDOR_THEME}',
    locale: '${LOCALE_CODE}',
    files: [
        'css/styles-m',
        'css/styles-l'
    ],
    dsl: 'less'
};
fs.writeFileSync('./dev/tools/grunt/configs/local-themes.js', '"use strict"; module.exports = ' + util.inspect(theme), 'utf-8');
EOM

if [[ -z "${VENDOR_THEME}" || -z "${THEME}" ]]; then
  echo "Using Magento/luma theme for grunt config"
  THEME=luma
  "${BIN_DIR}/clinotty" cp ./dev/tools/grunt/configs/themes.js ./dev/tools/grunt/configs/local-themes.js
else
  echo "Using ${VENDOR_THEME} theme for grunt config"
  "${BIN_DIR}/node" -e "${GEN_THEME_JS}"
fi

# Create files from sample files if they do not yet exist
test -f "${PROJECT_ROOT}/src/package.json" || cp "${PROJECT_ROOT}/src/package.json.sample" "${PROJECT_ROOT}/src/package.json"
test -f "${PROJECT_ROOT}/src/Gruntfile.js" || cp "${PROJECT_ROOT}/src/Gruntfile.js.sample" "${PROJECT_ROOT}/src/Gruntfile.js"
test -f "${PROJECT_ROOT}/src/grunt-config".json || cp "${PROJECT_ROOT}/src/grunt-config.json.sample" "${PROJECT_ROOT}/src/grunt-config.json"

# Disable grunt-contrib-jasmine on ARM processors (incompatible)
if [[ "$(uname -m)" == "arm64" ]]; then
  sed -e 's/"grunt-contrib-jasmine": "[~.0-9]*",//' "${PROJECT_ROOT}/src/package.json" > "${PROJECT_ROOT}/package.json" \
    && mv "${PROJECT_ROOT}/package.json" "${PROJECT_ROOT}/src/package.json"
fi

# Enable these custom files on compose.dev.yaml so custom updates are persisted
sed -e 's/grunt-config.json.sample/grunt-config.json/' "${PROJECT_ROOT}/compose.dev.yaml" > "${PROJECT_ROOT}/compose.dev.yaml.updated" \
  && mv "${PROJECT_ROOT}/compose.dev.yaml.updated" "${PROJECT_ROOT}/compose.dev.yaml"
sed -e 's/Gruntfile.js.sample/Gruntfile.js/' "${PROJECT_ROOT}/compose.dev.yaml" > "${PROJECT_ROOT}/compose.dev.yaml.updated" \
  && mv "${PROJECT_ROOT}/compose.dev.yaml.updated" "${PROJECT_ROOT}/compose.dev.yaml"
sed -e 's/package.json.sample/package.json/' "${PROJECT_ROOT}/compose.dev.yaml" > "${PROJECT_ROOT}/compose.dev.yaml.updated" \
  && mv "${PROJECT_ROOT}/compose.dev.yaml.updated" "${PROJECT_ROOT}/compose.dev.yaml"

"${BIN_DIR}/restart" app phpfpm

"${BIN_DIR}/npm" install ajv@^5.0.0 --save
"${BIN_DIR}/npm" install
"${BIN_DIR}/magento" cache:clean
"${BIN_DIR}/grunt" clean
"${BIN_DIR}/grunt" exec:"${THEME}"
"${BIN_DIR}/grunt" less:"${THEME}"
