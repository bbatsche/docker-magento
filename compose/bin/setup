#!/bin/bash

set -o errexit

[[ -z "${BIN_DIR}" ]] && BIN_DIR="$(dirname "$0")"
[[ -z "${PROJECT_ROOT}" ]] && PROJECT_ROOT="$(dirname "${BIN_DIR}")"

DOMAIN=${1:-magento.test}

"${BIN_DIR}/stop"

if ! "${BIN_DIR}/start" --no-dev; then
  echo "Failed to start Docker services"
  exit
fi

"${BIN_DIR}/clinotty" chmod u+x bin/magento
rm -rf "${PROJECT_ROOT}/src" && mkdir "${PROJECT_ROOT}/src"

echo "Installing Data Solutions Dev Requirements"
# Install services-connector jwt dependency
"${BIN_DIR}/composer" require firebase/php-jwt gmostafa/php-graphql-client

echo "Adding Magento modules to Composer allow-plugins directive..."
"${BIN_DIR}/clinotty" composer config --no-plugins allow-plugins.magento/magento-composer-installer true
"${BIN_DIR}/clinotty" composer config --no-plugins allow-plugins.magento/inventory-composer-installer true
"${BIN_DIR}/clinotty" composer config --no-plugins allow-plugins.laminas/laminas-dependency-plugin true

echo "Running, Magento setup:install..."
"${BIN_DIR}/setup-install" "${DOMAIN}"

echo "Copying files from container to host after install..."
"${BIN_DIR}/copyfromcontainer" --all

echo "Forcing deploy of static content to speed up initial requests..."
"${BIN_DIR}/clinotty" bin/magento setup:static-content:deploy -f

echo "Setting basic URL and generating SSL certificate..."
"${BIN_DIR}/setup-domain" "${DOMAIN}"

echo "Fixing owner and permissions..."
"${BIN_DIR}/fixowns"
"${BIN_DIR}/fixperms"

echo "Clearing the cache to apply updates..."
"${BIN_DIR}/clinotty" bin/magento cache:flush

echo "Installing cron, run 'bin/cron start' to enable..."
"${BIN_DIR}/clinotty" bin/magento cron:install

echo "Turning on developer mode..."
"${BIN_DIR}/clinotty" bin/magento deploy:mode:set developer

echo "Docker development environment setup complete."
echo "You may now access your Magento instance at https://${DOMAIN}/"
